apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "jacoco"

jacoco {
    toolVersion = "0.8.5"
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "np.com.susonthapa.moviesusf"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField 'String', "OMDB_API_KEY", omdb_api_key
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "OMDB_API_KEY", omdb_api_key
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // to prevent the addition of jvm-target
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    viewBinding.enabled = true
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ["testDebugUnitTest"]) {
    reports {
        xml.enabled = true
        html.enabled = false
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.from files([mainSrc])
    classDirectories.from files([debugTree])
    executionData.from fileTree(dir: project.buildDir, includes: ['jacoco/testDebugUnitTest.exec'])
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "com.google.android.material:material:1.2.0-rc01"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.0"

    // dagger
    implementation "com.google.dagger:dagger:2.28"
    kapt "com.google.dagger:dagger-compiler:2.28"

    // timber for logging
    implementation "com.jakewharton.timber:timber:4.7.1"

    // fresco image viewer
    implementation "com.facebook.fresco:fresco:2.2.0"

    // rxjava
    implementation "io.reactivex.rxjava3:rxjava:3.0.3"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"

    // rx-relay
    implementation "com.jakewharton.rxrelay3:rxrelay:3.0.0"

    // rx binding
    implementation "com.jakewharton.rxbinding4:rxbinding:4.0.0"
    implementation "com.jakewharton.rxbinding4:rxbinding-material:4.0.0"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava3:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.7.2"
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"

    // moshi json library
    implementation "com.squareup.moshi:moshi:1.9.2"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.9.2"

    // testing
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}